-- 2번 : 집합, view, 시퀀스

-- 1. 집합 연산

CREATE TABLE TBL_A(
	NAME VARCHAR2(20)
);

--INSERT INTO TBL_A VALUES('홍길동');
--INSERT INTO TBL_A VALUES('김보라');
--INSERT INTO TBL_A VALUES('김나나');
--INSERT INTO TBL_A VALUES('김뚜비');
--INSERT INTO TBL_B VALUES('이철수');

SELECT * FROM TBL_A;

CREATE TABLE TBL_B(
	NAME VARCHAR2(20)
);

--INSERT INTO TBL_B VALUES('이철수');
--INSERT INTO TBL_B VALUES('심호동');
--INSERT INTO TBL_B VALUES('이자민');
--INSERT INTO TBL_B VALUES('이영희');
--INSERT INTO TBL_A VALUES('김뚜비');

SELECT * FROM TBL_A;
SELECT * FROM TBL_B;


-- 1) UNION : 합집합, 중복제거 => 결과는 중복없이 모든 이름 표시
SELECT NAME FROM TBL_A
UNION 
SELECT NAME FROM TBL_B; -- 8개 행

-- 2) UNION ALL : 합집합, 중복제거X
SELECT NAME FROM TBL_A
UNION ALL
SELECT NAME FROM TBL_B; -- 10개 행

-- 3) INTERSECT : 교집합 (A와 B에 모두 있는 사람만 출력)

SELECT NAME FROM TBL_A
INTERSECT
SELECT NAME FROM TBL_B;

-- 4) MINUS : 차집합
SELECT NAME FROM TBL_A
MINUS
SELECT NAME FROM TBL_B;

SELECT NAME FROM TBL_B
MINUS 
SELECT NAME FROM TBL_A;

-- 2. 시퀀스
CREATE TABLE TBL_USERS(
	USER_ID NUMBER,
	USER_NAME VARCHAR2(30),
	CONSTRAINT PK_USERS PRIMARY KEY(USER_ID)
);

CREATE SEQUENCE SEQ_USER_ID START WITH 10 INCREMENT BY 1;

INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구1');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구2');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구3');
--INSERT INTO TBL_USERS VALUES(TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_USER_ID.NEXTVAL, 숫자형));
-- ↑ 시퀀스에 날짜 형 넣는법, 시퀀스는 숫자만 조회하기에 날짜만 넣는건 불가능하고 문자로 형변환이 필요하다

SELECT * FROM TBL_USERS;

DROP SEQUENCE SEQ_USER_ID;

CREATE SEQUENCE SEQ_USER_ID START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;

-- 시퀀스 현재 값 확인, 확인할때마다 조건에 맞춰 1번씩 증가함
SELECT SEQ_USER_ID.NEXTVAL
FROM DUAL;

-- 시퀀스 현재 값 확인, 증가없음
SELECT SEQ_USER_ID.CURRVAL
FROM DUAL;


-- 3. VIEW
CREATE VIEW MEMRENTAL AS 
SELECT M.MEM_ID, M.MEM_NAME, R.BOOK_ID, R.REN_RENTALDATE, R.REN_RETURNDATE
FROM TBL_MEMBER M JOIN TBL_RENTAL R
ON M.MEM_ID = R.MEM_ID;

SELECT * FROM MEMRENTAL;

INSERT INTO MEMRENTAL 
VALUES(5, '짱아', 1, 1, SYSDATE);
--ORA-01779: cannot modify a column which maps to a non key-preserved table
-- 뷰를 통해 데이터를 업데이트 하려면 뷰가 키를 보존하는 테이블과 연결되어 있어야 한다
-- 뷰가 참조하는 기본 테이블의 각 행이 뷰에서 정확히 하나의 행에 해당해야한다

-- 해결방법1) 직접 테이블에 INSERT
-- 해결방법2) INSTEAD OF TRIGGER 사용
 

-- 셀프조인 한 결과 테이블을 VIEW로 생성
-- 항상 VIEW로 생성하기 전에 원본 쿼리문을 실행 확인하고 생성!!
CREATE VIEW VIEW_EMPLOYEES AS 
SELECT E.EMPLOYEE_ID 직원ID, E.FIRST_NAME 직원이름, M.EMPLOYEE_ID 매니저ID, M.FIRST_NAME 매니저이름
FROM EMPLOYEES E LEFT JOIN EMPLOYEES M
ON M.EMPLOYEE_ID =  E.MANAGER_ID
ORDER BY E.EMPLOYEE_ID;

SELECT * FROM VIEW_EMPLOYEES;
SELECT * FROM TBL_MEMBER;

INSERT INTO TBL_MEMBER
--VALUES (6, '맹구2', '525-252-2525', 'fff@koreait.com')



































































