-- 2번 : 집합, view, 시퀀스

-- 1. 집합 연산

CREATE TABLE TBL_A(
	NAME VARCHAR2(20)
);

--INSERT INTO TBL_A VALUES('홍길동');
--INSERT INTO TBL_A VALUES('김보라');
--INSERT INTO TBL_A VALUES('김나나');
--INSERT INTO TBL_A VALUES('김뚜비');
--INSERT INTO TBL_B VALUES('이철수');

SELECT * FROM TBL_A;

CREATE TABLE TBL_B(
	NAME VARCHAR2(20)
);

--INSERT INTO TBL_B VALUES('이철수');
--INSERT INTO TBL_B VALUES('심호동');
--INSERT INTO TBL_B VALUES('이자민');
--INSERT INTO TBL_B VALUES('이영희');
--INSERT INTO TBL_A VALUES('김뚜비');

SELECT * FROM TBL_A;
SELECT * FROM TBL_B;


-- 1) UNION : 합집합, 중복제거 => 결과는 중복없이 모든 이름 표시
SELECT NAME FROM TBL_A
UNION 
SELECT NAME FROM TBL_B; -- 8개 행

-- 2) UNION ALL : 합집합, 중복제거X
SELECT NAME FROM TBL_A
UNION ALL
SELECT NAME FROM TBL_B; -- 10개 행

-- 3) INTERSECT : 교집합 (A와 B에 모두 있는 사람만 출력)

SELECT NAME FROM TBL_A
INTERSECT
SELECT NAME FROM TBL_B;

-- 4) MINUS : 차집합
SELECT NAME FROM TBL_A
MINUS
SELECT NAME FROM TBL_B;

SELECT NAME FROM TBL_B
MINUS 
SELECT NAME FROM TBL_A;

-- 2. 시퀀스
CREATE TABLE TBL_USERS(
	USER_ID NUMBER,
	USER_NAME VARCHAR2(30),
	CONSTRAINT PK_USERS PRIMARY KEY(USER_ID)
);

CREATE SEQUENCE SEQ_USER_ID START WITH 10 INCREMENT BY 1;

INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구1');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구2');
INSERT INTO TBL_USERS VALUES(SEQ_USER_ID.NEXTVAL, '짱구3');
--INSERT INTO TBL_USERS VALUES(TO_CHAR(SYSDATE, 'YYYYMMDD') || LPAD(SEQ_USER_ID.NEXTVAL, 숫자형));
-- ↑ 시퀀스에 날짜 형 넣는법, 시퀀스는 숫자만 조회하기에 날짜만 넣는건 불가능하고 문자로 형변환이 필요하다

SELECT * FROM TBL_USERS;

DROP SEQUENCE SEQ_USER_ID;

CREATE SEQUENCE SEQ_USER_ID START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;

-- 시퀀스 현재 값 확인, 확인할때마다 조건에 맞춰 1번씩 증가함
SELECT SEQ_USER_ID.NEXTVAL
FROM DUAL;

-- 시퀀스 현재 값 확인, 증가없음
SELECT SEQ_USER_ID.CURRVAL
FROM DUAL;

















































































