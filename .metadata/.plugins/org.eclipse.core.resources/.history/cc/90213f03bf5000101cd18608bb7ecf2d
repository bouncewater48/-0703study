package Method;
// 9번 : Call By Reference
public class Callbyreference {
	public static void main(String[] args) {
		
		//java의 기본 참조 타입 복사는 얕은 복사이다
		
		//참조값과 call by value
		int[] ar = {1, 2, 3};
		System.out.println("메소드 호출 전 : " + ar[0]); //1
//		System.out.println(ar); //[I@3af49f1c
//		modifyArray(ar); 
//		System.out.println("메소드 호출 후 : " + ar[0]); //10

//		메소드 호출 전 : 1
//		[I@3af49f1c
//		[I@3af49f1c
//		메소드 호출 후 : 10
		
//		int[] ar = {1, 2, 3};
		System.out.println("array2 메소드 호출 전 : " + ar[0]);
		System.out.println(ar); //[I@3af49f1c
		modifyArray(ar); 
		System.out.println("array2 메소드 호출 후 : " + ar[0]);
		System.out.println(ar);
		
	}
	
	static void modifyArray(int[] ar) {
		System.out.println(ar); //[I@3af49f1c
		ar[0] = 10; // 참조된 배열의 첫번째 값을 변경
	}
	
	//즉 배열의 참조값이 복사되어 전달되므로 메소드 내부에서 배열의 값을 변경하면
	//원본 배열에도 영향을 미친다
	
	static void modifyArray2(int[] ar) {
		ar = new int[] {10, 20, 30};
		System.out.println(ar);
	}
			
	
	
}
