-- 1번 : SELECT
-- 해석할때는 항상 FROM이 첫번째, SELECT는 그 이후
-- SELECT 컬럼명 FROM 테이블명;
-- 해당 테이블에서 특정 컬럼을 선택해서 조회하겠다는 의미
-- 컬럼명 자리에 *를 쓰면 모든 컬럼 선택을 의미
SELECT * FROM EMPLOYEES;
-- 해석 : EMPLOYEES 테이블에서 모든 컬럼을 조회하겠다

-- HR.테이블명 작성하는 이유는 여러 계정의 같은 이름의 테이블이름이 존재할 수 있기 때문이다
-- 지금 로그인한 게정의 테이블의 우선순위가 높기 때문에 일반적으로 계정명은 생략이 가능하다
SELECT FIRST_NAME FROM EMPLOYEES;
SELECT FIRST_NAME FROM HR.EMPLOYEES;
-- 해석 : HR 계정에 있는 employees 테이블에서 first_name 컬럼을 조회하겠다

-- 두 개의 결과는 다르다(select 뒤에 작성된 컬럼명대로 Result 테이블에 표시된다)
-- 컬럼 조회시 순서가 중요하다(결과가 다르게 나옴!!)
SELECT first_name, last_name
FROM employees;

SELECT last_name, first_name
FROM employees;
-- 해석 : employees 테이블에서 LAST_NAME, FIRST_NAME 컬럼을 조회하겠다

-- 정렬해서 조회하기
-- SELECT 컬럼명 FROM 테이블명 ORDER BY 컬럼명 [ASC or DESC];

-- employees 테이블에서 사원의 이름(FIRST_NAME), 성(LAST_NAME), 급여를 급여 낮은 순서부터 조회하기
-- 급여 낮은(오름차순) 순서부터 조회하기
SELECT * FROM employees;

SELECT FIRST_NAME, LAST_NAME, SALARY -- 2) FIRST_NAME, LAST_NAME, SALARY 컬럼을 조회할거야
FROM EMPLOYEES		-- 1)EMPLOYEES 테이블에서 
ORDER BY SALARY ASC; -- 3) SALARY 컬럼을 오름차순으로 정렬해서
-- ORDER BY에 ASC나 DESC를 쓰지 않으면 기본 오름차순(ASC) 정렬
-- 오름차순 정렬 ASC(Ascending) : 앞글자 3글자만 따서 ASC로 사용한다
-- 내림차순 정렬 DESC(Descending) : 앞글자 4글자만 따서 DESC로 사용한다

SELECT first_name, last_name, salary -- 2) first_name, last_name, salary 컬럼을 조회할거야
FROM EMPLOYEES -- 1) EMPLOYEES 테이블에서
ORDER BY salary DESC; -- 3) salary 컬럼을 내림차순으로 정렬해서

SELECT * FROM employees;
-- 문자의 정렬 (first_name) : ASC로 정렬 시 a -> z까지 순서대로 정렬, DESC로 정렬 시 z -> a까지 순서대로 정렬
SELECT first_name
FROM employees
ORDER BY first_name ASC;

-- 날짜의 정렬(hire_date) : ASC로 정렬시 예전날짜부터 최신날짜 순으로 정렬, DESC로 정렬시 최신날짜부터 과거날짜순으로 정렬
SELECT hire_date
FROM EMPLOYEES
ORDER BY hire_date ASC;

-- ORDER BY절의 컬럼명은 조회하는 컬럼명과 반드시 일치하지 않아도 가능하다
-- 해당 테이블에 있는 컬럼이라면 다른 컬럼명으로 정렬해도 무방하다
SELECT * FROM EMPLOYEES;

-- 조회할 컬럼 : EMPLOYEE_ID, 정렬할 컬럼 : SALARY
SELECT EMPLOYEE_ID
FROM EMPLOYEES
ORDER BY salary ASC;

SELECT EMPLOYEE_ID, SALARY -- 2) EMPLOYEE_ID와 SALARY 컬럼을 조회하겠다
FROM EMPLOYEES		-- 1) EMPLOYEES 테이블에서
ORDER BY SALARY ASC;-- 3) SALARY 컬럼의 오름차순 정렬로




