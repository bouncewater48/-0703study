/*
모델링 과제
   도서관에서 회원의 정보와 책의 정보가 필요하다
   회원의 정보는 회원번호, 이름, 나이, 핸드폰번호, 주소가 필요하고 
                                    책의 정보는 도서번호, 책이름, 장르가 필요하다
   장르는 인문학, IT, 추리 3개뿐이다
   한명의 회원은 여러권의 책을 빌릴 수 있다
   
   구현시
      테이블 생성 후 5개씩 값 넣고 조회하기
   1) 인문학 장르의 책의 정보 조회(컬럼은 모두 조회)
   2) 회원 테이블 조회(회원번호 위에서 3명만 조회)
*/ 
/*   
 개념적 설계
회원정보     /  책의정보  /   장르
회원번호 문자   도서번호 숫자  장르이름
이름 문자       책이름   문자   인문학
나이 숫자       장르     문자   IT
핸드폰번호 숫자                 추리
주소 문자

상위테이블 : 회원정보 & 책의정보
하위테이블 : 장르

회원 1:N 빌리기 : 회원 한명은 여러 책을 빌리기 가능
회원은 회원 번호만 필요, 책의정보 & 장르 불필요
책은 장르에 장르 3개가 같이 들어와야함
장르는 책의정보 : 장르에 들어가야하니 테이블이 아닌 조합키 : 컬럼3개 하나로 사용

INSERT INTO BOOK_GENRE
VALUES(HUMANITY, IT, MYSTERY);
*/

/*
 논리적 설계
회원정보     /  책의정보     
회원번호(PK)    도서번호(PK)   
이름            책이름         
나이            장르(FK)      IT
핸드폰번호(UK)                추리
주소                          인문학

회원정보 PK : 회원번호
UK : 핸드폰번호
NOT NULL : 이름, 나이, 주소

책의정보 PK : 도서번호
FK : 장르
NOT NULL : 책이름
*/

/*
 물리적 설계

회원정보(TBL_Library_USER)
USER_NUMBER NUMBER : PK
------------------------------
USER_NAME VARCHAR2(10)
USER_AGE NUMBER
USER_PHONE_NUMBER NUMBER
USER_ADDRESS VARCHAR2(100)

책의정보(TBL_BOOK)
BOOK_NUMBER NUMBER : PK
-------------------------------
BOOK_NAME VARCHAR2(100)
BOOK_GENRE VARCHAR2(100)

INSERT INTO BOOK_GENRE
VALUES(HUMANITY, IT, MYSTERY);
*/

--구현

CREATE TABLE TBL_Library_USER(
USER_NUMBER NUMBER,
USER_NAME VARCHAR2(10) ,
USER_AGE NUMBER, 
USER_PHONE_NUMBER VARCHAR(13),
USER_ADDRESS VARCHAR2(100),
CONSTRAINT PK_USER PRIMARY KEY(USER_NUMBER)
);

INSERT INTO TBL_Library_USER
--VALUES(1, '짱구', 17, '1078541851', '서울');
--VALUES(2, '맹구', 15, '1089745865', '대구');
--VALUES(3, '철수', 20, '1088565842', '춘천');
--VALUES(4, '길동', 12, '1084653258', '서울');
--VALUES(5, '성주', 31, '1065458974', '부산');

SELECT USER_NUMBER 회원번호, USER_NAME 이름, USER_AGE 나이, 
USER_PHONE_NUMBER 핸드폰번호, USER_ADDRESS 주소
FROM TBL_Library_USER;


--DROP TABLE TBL_Library_USER;

--DELETE FROM TBL_Library_USER
--WHERE USER_NUMBER = 5;

CREATE TABLE TBL_BOOK(
BOOK_NUMBER NUMBER,
BOOK_NAME VARCHAR2(100),
BOOK_GENRE VARCHAR2(100),
BOOK_GENRE_HUMAITY VARCHAR2(100),
BOOK_GENRE_IT VARCHAR2(100),
BOOK_GENRE_MYSTERY VARCHAR2(100),
CONSTRAINT PK_BOOK PRIMARY KEY(BOOK_NUMBER)
CONSTRAINT FK_BOOK FOREIGN KEY(BOOK_GENRE) REFERENCES TBL_BOOK(BOOK_GENRE)
);

--DROP TABLE TBL_BOOK;

SELECT * FROM TBL_Library_USER;
SELECT BOOK_NUMBER 도서번호, BOOK_NAME 도서명, BOOK_GENRE 도서장르 
FROM TBL_BOOK;


INSERT INTO TBL_BOOK
VALUES(1, '경제학 콘서트', 'HUMANITY');
--VALUES(2, '타인의 고통', 'HUMANITY');
--VALUES(3, '고백록', 'HUMANITY');
--VALUES(4, '해커와 화가', 'IT');
--VALUES(5, '린 스타트업', 'IT');
--VALUES(6, '리팩터링', 'IT');
--VALUES(7, '그리고 아무도 없었다', 'MYSTERY');
--VALUES(8, '셜록 홈즈', 'MYSTERY');
--VALUES(9, '데드맨', 'MYSTERY');

DELETE FROM TBL_BOOK 
WHERE BOOK_NUMBER = 9;

--(1)
SELECT BOOK_NUMBER 도서번호, BOOK_NAME 도서명, BOOK_GENRE 도서장르
FROM TBL_BOOK
WHERE BOOK_GENRE = 'HUMANITY'
ORDER BY BOOK_GENRE;

SELECT * FROM TBL_BOOK;

--(2)
SELECT USER_NUMBER 회원번호, USER_NAME 이름, USER_AGE 나이, USER_PHONE_NUMBER 핸드폰번호, USER_ADDRESS 주소
FROM TBL_Library_USER
WHERE USER_NUMBER <= 3;

SELECT * FROM TBL_Library_USER;

-- 이 파일로 모델링, 정규화도 진행하는게 과제































