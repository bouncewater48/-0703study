day27(web 1일차)
html -> ide 설치 -> html 기본요소와 태그 -> 인라인/블록요소 -> css -> display 속성 

0. WEB(HTML, CSS, Javascript) 
   HTML   : 뼈대(웹 문서의 구조를 정의하고 콘텐츠를 표현하는 기본 마크업 언어) 
   CSS   : 디자인 요소
      (HTML 문서에 레이아웃과 디자인을 포함한 시각적 요소를 정의하기 위한 규격
      콘텐츠 위치, 정렬, 글자크기, 여백, 배경색상 등을 정의)   
   Javascript   : 동작 추가 
      (HTML 문서에 이벤트 처리나 동적으로 변환하는 콘텐를 표현하거나 서버와의 연결을 
      통해 데이터를 가지고 오는 등의 프로그램적인 요소, 동적 처리) 

1. HTML(Hyper Text Markup Language) 
   웹 문서를 만드는 언어 
   하이퍼 텍스트 : 문서를 서로 연결해주는 링크를 의미
   마크업 : 표시한다는 뜻 

- HTML5 왜 HTML로 부르게 된 이유
	2014년 11월에 발표된 HTML 표준 규약 이전 버전과 구별하기 위해	한동안 HTML5로 불렀다
	다양한 기능이 추가되었기 때문에 HTML4에 이어서 HTML5로 구분하여 불렀으나 최근 대부분의 웹 브라우저에서
		HTML5를 지원하면서 HTML5에서 5를 빼고 그냥 HTML이라고 부른다

1) HTML 구조
	기본구조는 <!DOCTYPE html>로 시작해서 <html>, <head>, <body> 3개 영역으로 구성됨
	<!DOCTYPE HTML>		: 현재 문서가 HTML5 언어로 작성된 웹 문서라는 의미
	<HTML>			: <HTML>~</HTML> 웹문서의 시작과 끝을 나타내는 태그
	  <HEAD></HEAD>		: <HEAD>~</HEAD> 웹 브라우저가 웹 문서를 해석하는데 필요한 정보를 입력하는 부분
          여는태그 /닫는태그
	  <BODY></BODY>		: <BODY>~</BODY> 실제로 웹 브라우저 화면에 나타나는 내용
	</HTML>

2) 태그의 기본 구조
	<시작태그 속성1="속성값1" 속성2="속성값2">내용</종료태그>

(1) 태그(Tag)
	<>로 표시한다
	일반적으로 <시작태그></종료태그> 한쌍으로 사용한다
	시작태그만 있는 것들도 존재하며 빈태그라고 부른다 ex) <hr />,<br /> < /는 생략가능

(2) 내용(content)
	시작태그와 종료태그 사이에 있는 내용

(3) 엘리먼트(element)
	태그 + 내용

(4) 속성(attribute)과 속성값(value)
	태그 <> 안에 있는 일종의 옵션(설정)
	속성="속성값"으로 사용
	여러 속성을 지정할 경우 각 속성을 띄워쓰기로 구분한다
	ex) <hr align="right" id="ex">내용이다</h1>

3) 태그의 기본 구조2
- html 태그
	태그 <>를 사용하여 나타낸다
	종료 태그 앞에 </>가 항상 붙게 된다
	태그 안에 또 다른 태그가 들어갈 수 있으나 열어준 순서대로 닫아야한다
	일부 태그는 닫는 태그가 없는 경우도 있다(빈 태그)
	HTML의 주석은 <!-- -->로 표시한다

+) java 주석	//	/* ~ */		/** ~ */
   dbms 주석	--	/* ~ */
   html 주석	<!-- -->
   css 주석	/* ~ */

- 속성(attribute)
	html 태그에 부가적인 정보를 제공하는 방법
	그림을 넣기 위해 사용하는 <img> 태그의 경우 그림 파일 위치를 지정하기 위한 src 속성이 있다
	태그에 따라 지원하는 속성이 다르며 여러 속성을 나열해 지정하는 것이 가능하다
	항상 시작태그에 작성하며 속성명=값 형태로 구성된다
	html5에서는 디자인적인 표현을 위한 속성들이 CSS로 이전되어 태그에서 사용할 수 있는 속성은 그리 많지 않다

- 태그바디(Tag Body)
	태그와 태그 사이에 있는 콘텐츠를 의미한다

2. IDE 설치
1)
	IDE/에디터				특징		장점			단점
	Visual Studio Code(VS CODE)	가장 인기있는 코드 에디터	경량			설정 필요
								수많은 확장기능	
								Live Server 가능
	 IntelliJ IDEA			JAVA 기반 종합 IDE		Spring 등과 연동 편리	무거움, 유료
					(HTML, CSS 지원)		자동완성, 미리보기
								
	WebStorm			JetBrains의 웹 개발전용IDE	HTML/CSS/JS에 최적화	유료
								React, Vue 지원

	Eclipse				java 중심 IDE,		JAVA 프로젝트와 통합 가능	HTML/CSS 기능약함

					HTML도 사용가능
	CodePen(웹기반)			웹브라우저에서 코딩&실행   	설치 필요없음, 즉시실행가능 	저장기능, 로컬개발한계	

2) Visual Studio Code 설치
	https://code.visualstudio.com/에 접속해서 download
	경로 : C\Microsoft_VS_Code 로 설치 진행

- 확장 팩 설치
	korean language : 한글 팩 확장 프로그램
	ctrl + shift + p(명령팔레트) > configure display language 입력 > ko 또는 한국어 선택 > 안바뀌면 재시작
	live server	: html 파일을 실시간 확인할 수 있는 확장 프로그램

- 설정
	ctrl + ,	: 설정 단축키
	tab size를 2로 설정(들여쓰기 간격을 2로 설정, 들여쓰기 자주할건데 4로 되어있으면 불편함)
	

3. HTML 태그
	주석	<!-- -->	CTRL + /
	제목태그	<h1>~</h1>, <h6>~</h6>
	굵게	<b></b>, <strong></strong>
	기울임	<i></i>, <em></em>
	줄바꿈	<br>, <br />
	가로선	<hr>, <hr />
	리스트	<ol><li></li></ol> 순서 있는 리스트
		<ul><li></li></ul> 순서 없는 리스트
	테이블	<table></table>
		<caption></caption> 표의 제목
		<tr></tr>	행을 만드는 태그
		<th></th>	제목 열(굵게, 가운데 정렬)
		<td></td>	열을 만드는 태그
	이미지	<img src="경로">
	링크태그	<a herf="url주소">
	타이틀태그	<title></title>
	HTML 구조 : ! + 엔터

1) form태그	
	사용자로부터 입력받기 위한 양식을 작성하는 태그를 통틀어 <form> 태그라고 한다
	<form action="" method="GET|POST">폼요소</form>
	form 태그는 사용자에게 입력받은 데이터를 서버로 전송하기 위해 작성한다
	입력 받은 데이터를 폼데이터, 필드라고 부른다
	
	속성	action : form 태그 내부 요소에 작성된 데이터를 처리할 서버쪽의 파일주소를 작성한다
		method : 서버에 데이터를 넘겨주는 방법을 작성한다(get, post)

2) label 태그
	사용자가 입력하는 input 태그에 대한 설명이다
	웹 접근성에 좋기 때문에 사용한다
	
	방법1) label 태그에 for 속성과 input 태그의 id 속성을 사용하여 연결할 수 있다
		<label for="name">이름</label>
		<input id="name" type="text">

	방법2) label 태그를 사용하고 하위 태그로 input 태그를 사용한다
		<label>이름<input type="text"></label>

	속성	for : input 태그의 속성인 id와 연결해서 사용할 수 있다

3) input 태그
	실질적으로 사용자에게 입력을 받는 태그
	<input type="사용할타입">
	form 태그 안에서 작성해야 서버쪽에 입력받은 데이터를 넘겨줄 수 있다
	type 속성에 따라 입력받는 방식이 달라진다
	속성	text		: 텍스트형태로 사용자에게 입력받는다(아이디, 이름 등)
		password	: 패스워드를 입력받는다(화면에 입력한 값이 보이지 않는다)
		date		: 년, 월, 일을 선택하여 입력받는다
		number		: 숫자로 입력받는다
		tel		: 전화번호로 입력받는다
		hidden		: 화면에서는 보이지 않는 칸을 만든다
		submit		: 전송 버튼을 만든다
		reset		: 리셋버튼을 만든다
		radio		: 라디오 버튼을 만든다(여러 선택지 중 하나만 선택한다)
		checkbox	: 체크박스 버튼을 만든다(여러 선택지 중 여러개를 선택한다)

4) fieldset과 legend
	fieldset은 여러 label을 묶을 때 사용한다
	legend는 fieldset의 설명을 나타낸다

5) input 태그의 주요 속성
	autofocus	페이지에 진입시 자동으로 focus됨, 마우스 커서가 해당 input에서 깜빡임

	readonly	읽기 전용 필드로 설정함, 사용자가 입력할 수 없음

	disable		해당 태그를 비활성화 시키며 필드 데이터를 서버에 전송하지 않음

	placeholder	input에 힌트를 표시함
			ex) 아이디 입력칸에 아이디를 입력하세요 등의 문구를 띄움

	required	필수 필드로 설정함(반드시 입력해야함)
			필드의 데이터를 submit 버튼을 눌러서 전송할 때 필수 필드에 데이터가 있는지 확인하고
			데이터가 없으면 넘어가지 않고 알려줌
	
	value		텍스트를 입력하는 input에 미리 데이터를 채울 수 있다
			submit 버튼의 텍스트를 변경할 수도 있다
			체크박스나 라디오 버튼에서 사용시에는 해당 입력 요소가 선택되었을때 서버로 전송되는 값이다
			선택하지 않으면 아무 데이터도 서버로 전송되지 않는다

	name		서버쪽에 데이터를 보낼 때 데이터가 어떤 데이터인지 이름을 붙여서 보낸다
			체크박스나 라디오 버튼에서 사용시에는 그룹화한다
			라디오 버튼 그룹에서 동일한 name을 가진 여러 버튼이 있을 경우 한 번에 하나의 값만 선택할 수 있다
			체크박스 그룹에서 동일한 name을 가진 여러 버튼이 있을 경우 선택된 값들이 뱅열 형식으로 서버에 전달된다
	
	cheked		체크박스나 라디오 버튼에서 기본값을 설정할 수 있다

6) select, option 태그
	여러 옵션 중 하나를 선택하는 드롭다운 목록을 만드는 태그
	
	<select>
		<option value="값1">내용1</option>
		<option value="값2">내용2</option>
	<select>

	option 태그의 value가 실질적으로 서버에 넘어가는 값이다
	selected 속성을 이용하면 페이지 진입 시 선택되는 기본 값을 실행할 수 있다

7) textarea 태그
	텍스트를 여러줄로 입력할 수 있는 영역을 만드는 태그
	<textarea cols="가로너비" rows="세로길이>내용</textarea>

8) button 태그
	버튼을 만드는 태그
	<button type="submit | reset | button">내용</button>
	내용을 쓰지 않으면 버튼 모양만 작게 표시된다

4. 인라인/블록요소 ★★★
	요소를 여러 관점으로 분류할 수 있다
	그 중 가장 중요하게 봐야할 것은 인라인 요소와 블록 요소이다
	HTML의 모든 요소는 인라인과 블록으로 나뉜다
	CSS에서 인라인과 블록에 따른 처리를 하게 된다

1) 인라인요소
	내용물의 크기만큼만 영역을 차지하므로 다른 요소와 같은 줄에 있을 수 있다
	대표적인 태그는 span, img, a, strong 등이 있다

2) 블록요소
	내용물의 크기와 상관없이 한 줄을 다 차지하므로 다른 요소와 같은 줄에 위치할 수 없다
	즉, 너비 속성이 100%를 차지하고 자동으로 줄바꿈이 된다
	다른 요소를 하나의 블록으로 묶어주기 위해 사용한다
	대표적인 태그는 div, h1~h6, p 등이 있다

5. CSS(Cascading Style Sheets)
	HTML로 만든 웹 문서의 스타일(디자인)을 담당한다
	스타일이란 글꼴, 색상, 테두리, 정렬, 배치(레이아웃) 방법 등의 외관을 의미한다
	HTML에서 제공하는 속성으로 간단한 스타일을 지정할 수 있다
	그러나 내용과 디자인이 분리되어있어야 유지보수에 유리하므로 CSS를 사용하는 것이 더 좋다

1) CSS의 형식
	속성1: 속성값;

2) 스타일을 적용하는 방법
	- 인라인 스타일 : 스타일을 적용시킬 태그에 style 속성을 사용한다
		인라인 스타일을 간단하게 사용하기엔 좋으나 코드가 길어질수록 가독성이 떨어지며 
		css와 html이 뒤섞여 유지보수가 매우 힘들다
	
	<p style="color:red; background-color:black;">내용</p>

	- 내부 스타일 : <head> 영역에 <style></style> 태그를 사용하여 각 요소들의 스타일을 정의한다
		<head>
		  <title></title>
		  <style>
		    선택자 {
			속성1:속성값;
		    }
		  </style>
		</head>
		* 선택자 : 어떤 요소를 선택하기 위해 사용되는 것

	- 외부 스타일 : 별도의 CSS 파일을 만들어서 적용시킨다
		HTML과 CSS를 완전히 분리하여 관리할 수 있기 때문에 가장 많이 사용하는 방식이다
		CSS 파일을 HTML 파일에 적용시키기 위해서는 <head>영역에 <link> 태그를 사용해야한다
		<head>
		  <link rel="stylesheet" href="css 파일경로">
		</head>

3. id와 class
	id와 class 속성은 특정 태그들을 식별하고 그룹화하는데 사용한다
	모든 태그에 사용가능한 속성이다
	
	- id
		특정 태그에 식별 가능한 고유한 값을 부여한다
		선택자로 사용할 때는 #id명으로 사용한다
	
	- Class
		여러 태그를 하나의 집단(그룹화)으로 묶어준다
		선택자로 사용할 때는 .클래스명으로 사용한다
		하나의 태그에 id와 class를 동시에 가질 수 있으며 class도 여러개 가질 수 있다
		주로 class를 많이 사용하며 id는 그 페이지에서 중요하고 유일한 요소에 부여하는 것이 좋다


























