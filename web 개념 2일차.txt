day28 (웹표준 2일차) 개념
복습 -> css -> display 속성 -> flex box -> 시멘틱태그 -> 고급선택자

0. 복습
1) HTML(HyperText Markup Language)
	웹 문서를 만드는 언어

	vs code => 단축키 ! + enter
	<DOCTYPE html>
	  <html>
	    <head></head>
	    <body></body>
	  </html>

2) 태그 기본 구조
	<시작태그 속성="속성값" 속성2="속성값">내용</종료태그>

3) html 태그
	<!-- -->
	<h1>~</h1>, <h6>~</h6>		블록요소
	<b></b>, <strong></strong>	인라인요소
	<i></i>, <em></em>		인라인요소
	<hr>, <br>			블록요소
	<ol></ol>, <ul></ul>, <li></li>	블록요소
	<table></table>, <caption></caption>
	<tr></tr>, <th></th>, <td></td>
	<img src="경로">			인라인요소
	<a href="url or 경로"></a>	인라인
	<form></form>
	<label for=""></label>
	<input id="">			인라인요소
	type	text	
		password	
		number
		tel
		date
		submit
		reset
		radio
		checkbox
		hidden
	다른속성
		name
		value
		required
		autofocus
		readonly
		disable
		checked
	<fieldset></fieldset>
	<legend></legend>
	<select></select>
	<option></option>
	속성	value
		selected
	<textarea></textarea>
	속성	cols
		rows
	<button></button>
	type	submit
		reset
		button	
	<span></span>		인라인요소
	<div></div>		블록요소

4) CSS(Cascading Style Sheets)
	HTML로 만든 웹 문서의 스타일을 담당

- 인라인스타일 : 스타일을 적용시킬 태그에 style 속성을 사용한다
- 내부스타일 : <head></head> 영역에서 <style></style>
	선택자{
	  속성:속성값;
	}

	태그선택자 태그명
	클래스선택자 .클래스명
	아이디선택자 #아이디명
	*

- 외부 스타일 : 별도의 css 파일을 만들어 적용시킨다
	<head></head>영역 <link rel="stylesheet" href="css 파일경로">
★★★
1. Box Model
	HTML의 모든 요소는 일정한 영역을 차지하게 된다
	CSS에서는 이런 영역을 Box Model이라고 한다

1) 박스모델의 구성
	margin : 바깥여백(테두리 밖의 여백)
	border : 테두리
	padding: 안쪽여백(테두리와 컨텐츠 사이의 여백)
	contents: 컨텐츠의 영역
	
	블록요소의 박스모델은 전체 설정되며 margin 설정 시 위아래(상하)간격은 중복 적용되지 않는다
		width, height, 정렬가능하다
	인라인요소의 박스모델은 전체 설정되며 margin 설정 시 좌우간격은 중복적용된다
		width, height, 정렬되지 않는다

2) 박스모델 CSS 속성
- 내용(contents)
	witdh : 너비;
	height : 높이;
	단위는 기본적으로 px단위이며 그 외에도 여러 단위가 있다
	인라인 요소는 지정이 안된다

- border
	border : 굵기 모양(형태) 색상;
	
- margin
	margin : 4방향;
	margin : 상하 좌우;
	margin : 상 좌우 하;
	margin : 상 우 하 좌; (시계방향)

- padding
	padding : 4방향;
	padding : 상하 좌우;
	padding : 상 좌우 하;
	padding : 상 우 하 좌;(시계방향)

* auto를 사용하면 요소를 중앙에 위치하게 할 수 있다

+) CSS 우선순위 규칙
	!important > 인라인스타일 > id 선택자 > 클래스선택자, 속성선택자 > 태그선택자 > 전역선택자
	속성선택자 	[attr=value], :hover 등

2. flex box(Flexible Box Layout) ★★★★★
	레이아웃을 효율적으로 구성하기 위한 CSS의 레이아웃 모델
	요소의 정렬, 크기조절, 순서 지정 등을 유연하고 간단하게 처리할 수 있다

레이아웃을 만들 때 사용하는 속성
	float
	display의 flex box
	grid

1) Flex Box의 구성
	flex container	: 레이아웃을 적용하여 배치하려는 요소들을 감싸고 있는 부모요소
	flex item : 실질적으로 배치하려는 요소이며 flex container의 자식요소
		자식요소인 flex item은 여러개 만들 수 있다
	주축(main axis) : 자식요소가 배치되는 방향
	교차축(cross axis) : 주축을 가로지르는 방향


2) Flex container 만들기
	컨테이너로 사용할 부모 요소에 display:flex 속성을 지정한다
	
3) flex container의 주요 속성
	배치하려는 요소들의 전체 흐름, 정렬과 관련된 속성

- display
	display: flex;			flex container를 지정하는 속성
	flex-direction:row|column;	주축의 방향을 지정하는 속성
	justify-content : center | space-between | space-around; 컨테이너 주축을 기준으로 아이템 정렬
		center : 중앙 정렬
		space-between : 첫 아이템과 끝 아이템을 컨테이너 양쪽 끝에 배치하고 나머지 아이템들은 
			동일한 간격으로 정렬 / margin이 없으면 완전히 끝으로 붙는다
		space-around : 모든 아이템을 동일한 간격으로 정렬
	align-items : center | space-between | space-around;	컨테이너 교차축을 기준으로 정렬
	flex-wrap : nowrap | wrap;	컨테이너 내부의 요소들이 많거나 크기가 커서 컨테이너를 넘어가게 됐을 때
					한줄로 보여줄지 여러줄로 보여줄것인지 지정하는 속성
		nowrap : flex-wrap의 기본값, 줄바꿈을 하지 않고 한줄로 보여준다
			만약 컨테이너 크기가 작다면 각각의 아이템의 크기가 줄어든다
		wrap : 컨테이너 크기가 작다면 여러줄로 보여준다

3. display 속성
	HTML에서 요소를 어떻게 표시할 지 결정한다
	HTML 요소들은 기본적으로 display 속성값이 설정되어있다
	블록요소 -> display : block
	인라인요소 -> display : inline

- display 속성의 기본 4가지 값
	none
		요소를 보이지 않게 설정한다
		단순히 투명하게 안보이는 것이 아니라 아예 사라지게 되므로 공간을 차지하지 않는다
	block
		블록요소로 설정한다
		기본적으로 가로영역을 모두 차지한다
	inline	
		인라인요소로 설정한다
		기본적으로 컨텐츠의 크기만큼만 영역을 차지한다
		블록 요소와 달리 컨텐츠의 너비, 높이를 설정할 수 없다
	inline-block	
		인라인 블록 요소로 설정한다
		인라인처럼 컨텐츠만큼만 영역을 차지하지만 블록처럼 컨텐츠의 너비와 높이를 설정할 수 있다
		내부는 block 요소, 외부는 inline 요소의 특징을 갖는다

4. 시멘틱태그(Semantic Tag)		
	태그 자체적으로 의미가 있는 태그

1) 시맨틱 태그를 사용하는 이유
	코드의 가독성과 구조적 명확성
	SEO(검색엔진 최적화)에 유리
	접근성(Accessibillity) 향상
	유지보수와 확장성

2) 시맨틱 태그의 종류
	<header>	페이지의 해더영역, 최상단에 위치함
	<footer>	페이지의 최하단에 위치함, 회사 정보 등을 담은 푸터영역
	<nav>		다른 페이지로 이동하는 요소들을 담은 네비게이션 영역
	<main>		주 컨텐츠가 들어가는 영역
	<aside>		주 내용과는 연관성이 낮은 분리된 영역, 주로 사이드바로 사용
	<section>	컨텐츠 간 영역을 나눌 때 사용
	<article>	독립되고 반복적으로 재사용 가능한 컨텐츠 영역
	..













































































